---
title: "simulacrum_analysis_2"
format: html
editor_options: 
  chunk_output_type: inline
---


```{r}

library(tidyverse)
library(lubridate)
library(forestmodel)
library(broom)
library(splines)
library(patchwork)
library(knitr)

setwd("C:/Users/upc6/OneDrive - Region Nordjylland/Lars PhD/Projekter/simulacrum")

options(scipen=0)

sact_patient <- read_csv("data/data/sim_sact_patient.csv")
av_tumour    <- read_csv("data/data/sim_av_tumour.csv", 
                         col_types = cols(DIAGNOSISDATEBEST = col_date(format = "%Y-%m-%d")),
                         col_select = c(PATIENTID, LINKNUMBER, DIAGNOSISDATEBEST, SITE_ICD10_O2_3CHAR, AGE, SEX, QUINTILE_2015))
sact_tumour  <- read_csv("data/data/sim_sact_tumour.csv", 
                         col_select = c(MERGED_PATIENT_ID, MERGED_TUMOUR_ID, PRIMARY_DIAGNOSIS))
sact_regimen <- read_csv("data/data/sim_sact_regimen.csv",
                         col_select = c(MERGED_PATIENT_ID, MERGED_TUMOUR_ID, CLINICAL_TRIAL, HEIGHT_AT_START_OF_REGIMEN, WEIGHT_AT_START_OF_REGIMEN))

sact <- sact_patient |> 
  left_join(av_tumour,    by = c("LINK_NUMBER" = "LINKNUMBER")) |> 
  left_join(sact_tumour,  by = c("MERGED_PATIENT_ID")) |> 
  left_join(sact_regimen, by = c("MERGED_PATIENT_ID","MERGED_TUMOUR_ID"))


sact_jakob <- read_csv("~/GitHub/Simulacrum-study/_SELECT_sp_avt_PATIENTID_avt_DIAGNOSISDATEBEST_avt_SITE_ICD10_O2_202312121035.csv") |> select(-NHS_NUMBER)


sact_2 <- sact |> 
  mutate(PD = if_else(nchar(PRIMARY_DIAGNOSIS) == 3, paste0(PRIMARY_DIAGNOSIS,"0"), PRIMARY_DIAGNOSIS),
         ip = as.numeric(substr(PD,2,3)),
         diag = case_when(ip %in% c(47,69:72)       ~ "Eye, brain and CNS",
                          ip %in% c(50)             ~ "Breast",
                          ip %in% c(51:58)          ~ "Gynaecological",
                          ip %in% c(0:14,30:32)     ~ "Head and Neck",
                          ip %in% c(18:21)          ~ "Lower gastrointestinal",
                          ip %in% c(33:34,37:39,45) ~ "Lung and bronchus",
                          ip %in% c(15:17,22:25)    ~ "Upper gastrointestinal",
                          ip %in% c(60:68)          ~ "Urology",
                          ip %in% c(43:44)          ~ "Skin",
                          ip %in% c(81:86,90:96)    ~ "haematologic",
                          TRUE                      ~ "Ill-defined and unspecified")) |> 
  filter(diag != "haematologic", 
         !is.na(MERGED_TUMOUR_ID), 
         substr(PD,1,1) == "C", 
         between(AGE,18,130)) |> 
  mutate(height = if_else(between(HEIGHT_AT_START_OF_REGIMEN,1.3,2.1),round(HEIGHT_AT_START_OF_REGIMEN*100), NA))

sact_2_jakob <- sact_jakob |> 
  mutate(PD = if_else(nchar(PRIMARY_DIAGNOSIS) == 3, paste0(PRIMARY_DIAGNOSIS,"0"), PRIMARY_DIAGNOSIS),
         ip = as.numeric(substr(PD,2,3)),
         diag = case_when(ip %in% c(47,69:72)       ~ "Eye, brain and CNS",
                          ip %in% c(50)             ~ "Breast",
                          ip %in% c(51:58)          ~ "Gynaecological",
                          ip %in% c(0:14,30:32)     ~ "Head and Neck",
                          ip %in% c(18:21)          ~ "Lower gastrointestinal",
                          ip %in% c(33:34,37:39,45) ~ "Lung and bronchus",
                          ip %in% c(15:17,22:25)    ~ "Upper gastrointestinal",
                          ip %in% c(60:68)          ~ "Urology",
                          ip %in% c(43:44)          ~ "Skin",
                          ip %in% c(81:86,90:96)    ~ "haematologic",
                          TRUE                      ~ "Ill-defined and unspecified")) |> 
  filter(diag != "haematologic", 
         !is.na(MERGED_TUMOUR_ID), 
         substr(PD,1,1) == "C", 
         between(AGE,18,130)) |> 
  mutate(height = if_else(between(HEIGHT_AT_START_OF_REGIMEN,1.3,2.1),round(HEIGHT_AT_START_OF_REGIMEN*100), NA))

```

```{r}
sact_3 <- sact_2 |> 
  group_by(PATIENTID) |> 
  mutate(trial_all = any(CLINICAL_TRIAL %in% c("y","Y"))) |> 
  summarize(across(everything(), first))

sact_4 <- sact_3 |> 
  mutate(sex_group = if_else(SEX==2, "Female","Male"), 
         height=height/100,
         age = AGE,
         age_group = case_when(between(age, 18,44) ~ "18-44",
                               between(age, 45,64) ~ "45-64",
                               between(age, 65,74) ~ "65-74",
                               between(age, 75,130) ~ "> 75"),
         hei_group = case_when(between(height, 0,1.65) ~ "< 1.65",
                               between(height, 1.65,1.75) ~ "1.65 - 1.75",
                               between(height, 1.75,1.85) ~ "1.75 - 1.85",
                               between(height, 1.85,3) ~ "> 1.85"),
         seps = if_else(QUINTILE_2015 == "5 - most deprived", "vulnerable","non-vulnerable"),
         year = year(DIAGNOSISDATEBEST),
         Total = "total")

sact_3_jakob <- sact_2_jakob |> 
  group_by(PATIENTID) |> 
  mutate(trial_all = any(CLINICAL_TRIAL %in% c("y","Y"))) |> 
  summarize(across(everything(), first))

sact_4_jakob <- sact_3_jakob |> 
  mutate(sex_group = if_else(SEX==2, "Female","Male"), 
         height=height/100,
         age = AGE,
         age_group = case_when(between(age, 18,44) ~ "18-44",
                               between(age, 45,64) ~ "45-64",
                               between(age, 65,74) ~ "65-74",
                               between(age, 75,130) ~ "> 75"),
         hei_group = case_when(between(height, 0,1.65) ~ "< 1.65",
                               between(height, 1.65,1.75) ~ "1.65 - 1.75",
                               between(height, 1.75,1.85) ~ "1.75 - 1.85",
                               between(height, 1.85,3) ~ "> 1.85"),
         seps = if_else(QUINTILE_2015 == "5 - most deprived", "vulnerable","non-vulnerable"),
         year = year(DIAGNOSISDATEBEST),
         Total = "total")
```



```{r fig.height=8, fig.width=10}

p1 <- forest_model(glm(trial_all ~ seps + age_group + sex_group + hei_group + diag, data=sact_4, family = binomial))
ggsave(p1, filename = "simu_p1.png", width = 14, height = 8)

forest_model(glm(trial_all ~ seps + age_group + sex_group + hei_group + diag, data=sact_4, family = binomial))
forest_model(glm(trial_all ~ seps + age_group + sex_group + hei_group + diag, data=sact_4_jakob, family = binomial))
```

```{r results='hold'}
rf <- function(data, dig=2) {
  format(round(data, digits=dig),nsmall=dig)
}

strat <- c("total","non-vulnerable","vulnerable")
facts <- c("Total","trial_all","sex_group","age_group", "seps","hei_group","diag")

tmp <- bind_rows(sact_4 |> mutate(seps = "total"),sact_4) |> 
  mutate(Total = "tots",
         trial_all = as.character(trial_all),
         sep = fct_relevel(seps, strat))

A <- tmp |> 
  dplyr::select(all_of(facts)) |> 
  pivot_longer(names_to = "group", values_to ="stratification",-seps) |> 
  mutate(group = fct_relevel(group, facts)) |> 
  group_by(group, seps) |> 
  mutate(nn=n()) |> 
  group_by(group, stratification, seps) |> 
  summarize(N=paste0(n(), " (",rf(n()/mean(nn)*100,1),"%)")) |> 
  pivot_wider(names_from = seps, values_from = N)
A


B <- tmp |> 
  dplyr::select(age,seps) |> 
  pivot_longer(names_to = "group", values_to ="stratification",-seps) |> 
  group_by(group, seps) |> 
  summarize(aa =paste0(round(median(stratification, na.rm=T),1)," (",
                       round(quantile(stratification, probs=0.25,na.rm=T)[[1]]),":",
                       round(quantile(stratification, probs=0.75,na.rm=T)[[1]]),")")) |> 
  pivot_wider(names_from = seps, values_from = aa)

C <- tmp |> 
  dplyr::select(all_of(facts)) |> 
  pivot_longer(names_to = "group", values_to ="stratification",-seps) |> 
  filter(seps!="total",stratification!="tots") |> 
  group_by(group, seps,stratification) |> 
  count() |> 
  pivot_wider(names_from = seps, values_from = n) |> 
  group_by(group) |> 
  group_modify(~tibble(p_value=format.pval(round(chisq.test(rbind(.x$"non-vulnerable",.x$"vulnerable"))$"p.value",3),eps=0.001,digits=3,nsmall=3,scientific=FALSE)))

t1 <- A |> ungroup() |> 
  filter(!is.na(stratification)) |> 
  add_row(.before = c(6),B[1,]) |> 
  left_join(C, by="group") |> 
  kable(format = "html")
t1
t1 |> cat(file="simu_t1.html")





tmp <- bind_rows(sact_4_jakob |> mutate(seps = "total"),sact_4_jakob) |> 
  mutate(Total = "tots",
         trial_all = as.character(trial_all),
         sep = fct_relevel(seps, strat))

A <- tmp |> 
  dplyr::select(all_of(facts)) |> 
  pivot_longer(names_to = "group", values_to ="stratification",-seps) |> 
  mutate(group = fct_relevel(group, facts)) |> 
  group_by(group, seps) |> 
  mutate(nn=n()) |> 
  group_by(group, stratification, seps) |> 
  summarize(N=paste0(n(), " (",rf(n()/mean(nn)*100,1),"%)")) |> 
  pivot_wider(names_from = seps, values_from = N)
A


B <- tmp |> 
  dplyr::select(age,seps) |> 
  pivot_longer(names_to = "group", values_to ="stratification",-seps) |> 
  group_by(group, seps) |> 
  summarize(aa =paste0(round(median(stratification, na.rm=T),1)," (",
                       round(quantile(stratification, probs=0.25,na.rm=T)[[1]]),":",
                       round(quantile(stratification, probs=0.75,na.rm=T)[[1]]),")")) |> 
  pivot_wider(names_from = seps, values_from = aa)

C <- tmp |> 
  dplyr::select(all_of(facts)) |> 
  pivot_longer(names_to = "group", values_to ="stratification",-seps) |> 
  filter(seps!="total",stratification!="tots") |> 
  group_by(group, seps,stratification) |> 
  count() |> 
  pivot_wider(names_from = seps, values_from = n) |> 
  group_by(group) |> 
  group_modify(~tibble(p_value=format.pval(round(chisq.test(rbind(.x$"non-vulnerable",.x$"vulnerable"))$"p.value",3),eps=0.001,digits=3,nsmall=3,scientific=FALSE)))

t1 <- A |> ungroup() |> 
  filter(!is.na(stratification)) |> 
  add_row(.before = c(6),B[1,]) |> 
  left_join(C, by="group") |> 
  kable(format = "html")
t1
t1 |> cat(file="simu_t1.html")
```

```{r}

tmp <- bind_rows(sact_4 |> mutate(diag = "Total"), 
                 sact_4) |> 
  mutate(seps = fct_relevel(seps, strat))

t2_adj <- tmp |> 
  mutate(ttb = trial_all*1) |> 
  group_by(diag) |> 
  group_modify(~glm(ttb ~ seps + age + sex_group + year, data=.x, family="binomial") |> 
                 tidy(exponentiate=T, conf.int=T) |> 
                 mutate(n=nrow(.x),ntrial=sum(.x$trial_all))) |> 
  filter(term=="sepsvulnerable") |> 
  arrange(desc(n)) |> 
  mutate(est=paste0(rf(estimate,2)," (",rf(conf.low,2),"-",rf(conf.high,2),")"),
         p.value = format.pval(p.value, nsmall=3, eps = 0.001, digits=3),
         par=round(ntrial/n*100,1)) |> 
  select(diag, est, p.value, n,ntrial,par)

t2_cru <- tmp |> 
  mutate(ttb = trial_all*1) |> 
  group_by(diag) |> 
  group_modify(~glm(ttb ~ seps, data=.x, family="binomial") |> 
                 tidy(exponentiate=T, conf.int=T) |> 
                 mutate(n=nrow(.x),ntrial=sum(.x$trial_all))) |> 
  filter(term=="sepsvulnerable") |> 
  arrange(desc(n)) |> 
  mutate(est=paste0(rf(estimate,2)," (",rf(conf.low,2),"-",rf(conf.high,2),")"),
         p.value = format.pval(p.value, nsmall=3, eps = 0.001, digits=3),
         par=round(ntrial/n*100,1)) |> 
  pull(est)


t2 <- t2_adj
t2$crude <- t2_cru

t2 |> 
  kable(format = "html") |> 
  cat(file="simu_t2.html")
```

```{r}

th <- theme_classic() +
  theme(panel.grid = element_blank(),
        strip.background = element_blank(),
        legend.position = "bottom",
        legend.key.height = unit(0.7,"cm"),
        plot.margin = margin(2,20,2,2))

fit <- glm(trial_all ~ sex_group*ns(height,3), data=sact_4, family=binomial)
nd <- rbind(tibble(height=seq(1.6,2.00,0.01), sex_group="Male"),
            tibble(height=seq(1.5,1.9,0.01), sex_group="Female"))
pred <- predict(fit, newdata=nd, se.fit=T, type="response")
nd$est <- exp(pred$fit)
nd$se <- pred$se.fit

p1 <- nd |> ggplot(aes(height, est,ymin=est-(1.96*se),ymax=est+(1.96*se),fill=sex_group, color=sex_group)) +
  geom_line() +
  geom_ribbon(alpha=0.2, color=NA) +
  geom_hline(yintercept=1, linetype="dashed") +
  scale_fill_manual(NULL, values = c("#E63946","#1D3557"), aesthetics = c("fill","color")) +
  scale_y_continuous(expand=c(0,0), breaks=seq(1,1.2,0.05)) +
  scale_x_continuous(limits=c(1.48,2),expand=c(0,0),labels=scales::label_number(suffix="m")) +
  coord_cartesian(ylim=c(0.98, 1.2)) +
  th + theme(legend.position = c(0.15,0.85)) +
  labs(title="Trial participation by height ns(df=3)", subtitle="Unadjusted",y="OR")

fit <- glm(trial_all ~ sex_group*ns(height,3) + diag + age + year + seps, data=sact_4, family=binomial)
nd <- rbind(tibble(height=seq(1.6,2.00,0.01), sex_group="Male", diag="Lung and bronchus",age=50,year=2015,seps="non-vulnerable"),
            tibble(height=seq(1.5,1.9,0.01), sex_group="Female", diag="Lung and bronchus",age=50,year=2015,seps="non-vulnerable"))
pred <- predict(fit, newdata=nd, se.fit=T, type="response")
nd$est <- exp(pred$fit)
nd$se <- pred$se.fit

p2 <- nd |> ggplot(aes(height, est,ymin=est-(1.96*se),ymax=est+(1.96*se),fill=sex_group, color=sex_group)) +
  geom_line() +
  geom_ribbon(alpha=0.2, color=NA) +
  geom_hline(yintercept=1, linetype="dashed") +
  scale_fill_manual(NULL, values = c("#E63946","#1D3557"), aesthetics = c("fill","color")) +
  scale_y_continuous(expand=c(0,0), breaks=seq(1,1.2,0.05)) +
  scale_x_continuous(limits=c(1.48,2),expand=c(0,0),labels=scales::label_number(suffix="m")) +
  coord_cartesian(ylim=c(0.98, 1.2)) +
  th + theme(legend.position = c(0.15,0.85)) +
  labs(title="Trial participation by height ns(df=3)", subtitle="Adjusted for diagnosis, age, year and SEP",y="OR")


pp2 <- p1 + p2
ggsave(pp2, filename = "simu_p2.png", width = 9, height = 4)
```


TMLE

```{r}
fit <- tmle(Y = sact_4$trial_all, 
            A = sact_4$seps,
            W = cbind(sex = sact_4$sex,age = sact_4$age, year = sact_4$year),
            Q.SL.library = c("SL.glm","SL.gam","SL.mean","SL.randomForest"),
            g.SL.library = c("SL.glm","SL.gam","SL.mean","SL.randomForest"),
            family = "binomial",
            cvQinit = FALSE)


```

```{r}
sact_4_samp <- sact_4[sample(nrow(sact_4),10000),]

df <- bind_rows(sact_4_samp, sact_4_samp |> mutate(diag = "Total")) |> 
  mutate(ttb = trial_all*1,
         rs = if_else(seps=="vulnerable",1,0)) |> 
  group_by(diag) |> 
  group_modify(~ {
    tmle_fit <- tmle::tmle(Y = .x$ttb,
                           A = .x$rs,
                           W = .x[,c("AGE","SEX","year")],
                           Q.SL.library = "SL.randomForest",
                           family="binomial",V.Q = 3)
    tibble(estimate = tmle_fit$estimates$OR$psi,
           lower = tmle_fit$estimates$OR$CI[1],
           upper = tmle_fit$estimates$OR$CI[2],
           pp = tmle_fit$estimates$OR$pvalue,
           n = nrow(.x),
           ntrial = sum(.x$trial_all),
           par = round(ntrial/n*100,1)) |>
      arrange(desc(n)) |> 
      mutate(est = paste0(round(estimate,2)," (",round(lower,2),"-",round(upper,2),")"),
             p.value = format.pval(pp, nsmall=4)) |> 
      select(-upper,-lower,-estimate,-pp)
  })
df |> arrange(desc(n)) |> kable()
```

